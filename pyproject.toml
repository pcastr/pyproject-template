[tool.poetry]
name = "template"
version = "0.1.0"
description = "Projeto Template"
authors = ["pcastr <lpcastrovian@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11.9"
python-dotenv = "^1.0.1"


[tool.poetry.group.dev.dependencies]
pre-commit = "^3.7.1"
commitizen = "^3.27.0"

mkdocs = "^1.6.0"
mkdocstrings-python = "^1.10.5"
pymdown-extensions = "^10.8.1"

isort = "^5.13.2"
neovim = "^0.3.1"
debugpy = "^1.8.2"
black = "^24.4.2"
flake8 = "^7.1.0"
taskipy = "^1.13.0"
pytest = "^8.2.2"


[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "poetry"
update_changelog_on_bump = true
major_version_zero = true
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
exclude = '''(
    /(
        \.git
        | \.hg
        | \.mypy_cache
        | \.tox
        | \.venv
        | _build
        | buck-out
        | build
        | dist
    )/
    | ^docs/
    | ^tests/
    )'''


[tool.flake8]
max-line-length = 88
extend-ignore = "E203, E266"
exclude = [
  ".git",
  "__pycache__",
  ".venv",
  ".eggs",
  "*.egg",
  ".tox"
]

[tool.taskipy.tasks]
docs = "mkdocs serve"
git-config = "pre-commit install && pre-commit install --hook-type commit-msg"
pre-commit = "pytest -v && git add . && pre-commit run"
commit = "pytest -v && git add . && cz commit"
push = "git push origin"
update = "git pull origin"
test = "pytest -v"

[tool.bandit]
exclude_dirs = ["tests"]
